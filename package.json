{
  "name": "github-starboard",
  "version": "1.0.0",
  "description": "",
  "author": "Daiwei Lu <daiweilu123@gmail.com> (http://daiwei.lu)",
  "license": "MIT",
  "main": "index.js",
  "engines": {
    "node": "5.5.0",
    "npm": "3.5.3"
  },
  "dependencies": {
    "axios": "0.9.1",
    "bcrypt": "0.8.5",
    "bluebird": "3.2.1",
    "classnames": "2.2.3",
    "co": "4.6.0",
    "config": "1.19.0",
    "ejs": "2.4.1",
    "history": "1.17.0",
    "ioredis": "1.15.0",
    "knex": "0.9.0",
    "koa": "1.1.2",
    "koa-bodyparser": "2.0.1",
    "koa-ejs": "3.0.0",
    "koa-generic-session": "1.10.1",
    "koa-logger": "1.3.0",
    "koa-passport": "1.2.0",
    "koa-redis": "2.0.1",
    "koa-router": "5.3.0",
    "koa-static": "2.0.0",
    "lodash": "4.1.0",
    "octonode": "0.7.4",
    "parse-link-header": "0.4.1",
    "passport-github": "1.0.0",
    "pg": "4.4.4",
    "react": "0.14.7",
    "react-dom": "0.14.7",
    "react-redux": "4.2.0",
    "react-router": "2.0.0-rc5",
    "redux": "3.2.0",
    "redux-logger": "2.4.0",
    "redux-promise-middleware": "2.3.3",
    "rx": "4.0.7",
    "source-map-support": "0.4.0",
    "winston": "2.1.1"
  },
  "devDependencies": {
    "babel-cli": "6.4.5",
    "babel-core": "6.4.5",
    "babel-eslint": "4.1.7",
    "babel-loader": "6.2.1",
    "babel-plugin-transform-function-bind": "6.3.13",
    "babel-plugin-transform-runtime": "6.4.3",
    "babel-preset-es2015": "6.3.13",
    "babel-preset-es2015-node5": "1.1.2",
    "babel-preset-react": "6.3.13",
    "browser-sync": "2.11.1",
    "eslint": "1.10.3",
    "eslint-plugin-react": "3.16.1",
    "file-loader": "0.8.5",
    "node-sass": "3.4.2",
    "nodemon": "1.8.1",
    "svg-react-loader": "0.3.2",
    "webpack": "1.12.12"
  },
  "scripts": {
    "clean": "rm -rf public",
    "lint": "eslint --rulesdir eslint-rules source config script *.js",
    "watch:lint": "nodemon --exec 'npm run lint --silent' -w source -w config -w script",
    "test": "",
    "check": "npm run lint && npm test",
    "build:server": "webpack --config webpack.config.server.js",
    "build:client:js": "webpack --config webpack.config.js",
    "build:client:css": "node-sass --output-style expanded -o public source/client/style/index.scss",
    "watch:build:server": "npm run build:server -- -w",
    "watch:build:client:js": "npm run build:client:js -- -w",
    "watch:build:client:css": "npm run build:client:css -- -w",
    "live-reload": "browser-sync start --config bs-config.js",
    "predev": "npm run clean && mkdir public && npm run build:client:css",
    "dev": "docker-compose up & npm run watch:build:server & npm run watch:build:client:js & npm run watch:build:client:css & env DEBUG=knex:* nodemon -w public -w config -C public/server.js & npm run live-reload"
  }
}
